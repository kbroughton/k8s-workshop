user  root root;

worker_processes  2;

pid /var/run/nginx.pid;

#                          [ debug | info | notice | warn | error | crit ]

error_log  /var/log/nginx/error.log  debug;

events {
    worker_connections   2000;

    # use [ kqueue | epoll | /dev/poll | select | poll ];
    #use kqueue;
}

http {

    include       mime.types;
#    default_type  application/octet-stream;
#
#
    log_format main      '$remote_addr - $remote_user [$time_local] '
                         '"$request" $status $bytes_sent '
                         '"$http_referer" "$http_user_agent" '
                         '"$gzip_ratio"';
#
#    log_format download  '$remote_addr - $remote_user [$time_local] '
#                         '"$request" $status $bytes_sent '
#                         '"$http_referer" "$http_user_agent" '
#                         '"$http_range" "$sent_http_content_range"';
#


    server {
        #listen        80; # k8s-workshop.oss-k8s-security.cloudsec.training;
        #server_name   localhost 127.0.0.1; # k8s-workshop.oss-k8s-security.cloudsec.training;

        access_log   /var/log/nginx/access.log  main;

        root  /usr/share/nginx/html/;
        index index.html;

        location / {

        }


#        location /download/ {
#
#            valid_referers  none  blocked  server_names  *.example.com;
#
#            if ($invalid_referer) {
#                #rewrite   ^/   http://k8s-mdbook.oss-k8s-security.cloudsec.training/;
#                return   403;
#            }
#
#            #rewrite_log  on;
#
#            # rewrite /download/*/mp3/*.any_ext to /download/*/mp3/*.mp3
#            rewrite ^/(download/.*)/mp3/(.*)\..*$
#                    /$1/mp3/$2.mp3                   break;
#
#            root         /spool/www;
#            #autoindex    on;
#            access_log   /var/log/nginx-download.access_log  download;
#        }

        #location ~* \.(jpg|jpeg|gif)$ {
        #    root         /spool/www;
        #    access_log   off;
        #    expires      30d;
        #}
    }
}
