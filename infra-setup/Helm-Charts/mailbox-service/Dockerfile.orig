CMD ["/bin/sh"]
ENV PHPIZE_DEPS=autoconf dpkg-dev dpkg file g++ gcc libc-dev make pkgconf re2c
RUN apk add --no-cache --virtual .persistent-deps ca-certificates curl tar xz libressl
RUN set -x  \
    && addgroup -g 82 -S www-data  \
    && adduser -u 82 -D -S -G www-data www-data
ENV PHP_INI_DIR=/usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d
ENV PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2
ENV PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2
ENV PHP_LDFLAGS=-Wl,-O1 -Wl,--hash-style=both -pie
ENV GPG_KEYS=CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D
ENV PHP_VERSION=7.3.1
ENV PHP_URL=https://secure.php.net/get/php-7.3.1.tar.xz/from/this/mirror PHP_ASC_URL=https://secure.php.net/get/php-7.3.1.tar.xz.asc/from/this/mirror
ENV PHP_SHA256=cfe93e40be0350cd53c4a579f52fe5d8faf9c6db047f650a4566a2276bf33362 PHP_MD5=
RUN set -xe; apk add --no-cache --virtual .fetch-deps gnupg wget ; mkdir -p /usr/src; cd /usr/src; wget -O php.tar.xz "$PHP_URL"; if [ -n "$PHP_SHA256" ]; then echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -; fi; if [ -n "$PHP_MD5" ]; then echo "$PHP_MD5 *php.tar.xz" | md5sum -c -; fi; if [ -n "$PHP_ASC_URL" ]; then wget -O php.tar.xz.asc "$PHP_ASC_URL"; export GNUPGHOME="$(mktemp -d)"; for key in $GPG_KEYS; do gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; done; gpg --batch --verify php.tar.xz.asc php.tar.xz; command -v gpgconf > /dev/null  \
    && gpgconf --kill all; rm -rf "$GNUPGHOME"; fi; apk del .fetch-deps
COPY file:ce57c04b70896f77cc11eb2766417d8a1240fcffe5bba92179ec78c458844110 in /usr/local/bin/
    usr/
    usr/local/
    usr/local/bin/
    usr/local/bin/docker-php-source

RUN set -xe  \
    && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libressl-dev libsodium-dev libxml2-dev sqlite-dev  \
    && export CFLAGS="$PHP_CFLAGS" CPPFLAGS="$PHP_CPPFLAGS" LDFLAGS="$PHP_LDFLAGS"  \
    && docker-php-source extract  \
    && cd /usr/src/php  \
    && gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"  \
    && ./configure --build="$gnuArch" --with-config-file-path="$PHP_INI_DIR" --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" --enable-option-checking=fatal --with-mhash --enable-ftp --enable-mbstring --enable-mysqlnd --with-password-argon2 --with-sodium=shared --with-curl --with-libedit --with-openssl --with-zlib $(test "$gnuArch" = 's390x-linux-gnu'  \
    && echo '--without-pcre-jit') $PHP_EXTRA_CONFIGURE_ARGS  \
    && make -j "$(nproc)"  \
    && make install  \
    && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; }  \
    && make clean  \
    && cp -v php.ini-* "$PHP_INI_DIR/"  \
    && cd /  \
    && docker-php-source delete  \
    && runDeps="$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' '\n' | sort -u | awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' )"  \
    && apk add --no-cache --virtual .php-rundeps $runDeps  \
    && apk del .build-deps  \
    && pecl update-channels  \
    && rm -rf /tmp/pear ~/.pearrc
COPY multi:ca5e0e0a22a9acaec52323defcda7c7634bb6522f257ec20bee1888aede2387a in /usr/local/bin/
    usr/
    usr/local/
    usr/local/bin/
    usr/local/bin/docker-php-entrypoint
    usr/local/bin/docker-php-ext-configure
    usr/local/bin/docker-php-ext-enable
    usr/local/bin/docker-php-ext-install

RUN docker-php-ext-enable sodium
ENTRYPOINT ["docker-php-entrypoint"]
CMD ["php" "-a"]
LABEL MAINTAINER=Madhu Akula
WORKDIR /app
COPY dir:b22466f17c1e4741611533e702704c9de538d526d073ade316e37b8c8da68d51 in /app
    app/
    app/README.md
    app/home.php
    app/index.php
    app/logout.php
    app/mail.php

EXPOSE 80
CMD ["php" "-S" "0.0.0.0:80" "-t" "/app"]
